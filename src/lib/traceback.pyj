# vim:fileencoding=utf-8
# License: BSD Copyright: 2016, Kovid Goyal <kovid at kovidgoyal.net>
# globals: ρσ_str, ρσ_last_exception

def format_exc(limit):
    if not isinstance(ρσ_last_exception, Error):
        return []
    tb = ρσ_last_exception.internal_traceback or ρσ_last_exception.stack
    if tb:
        lines = ρσ_str.splitlines(tb)
        e = lines[0]
        lines = [l for l in lines[1:]]
        if limit:
            lines = lines[:limit+1] if limit > 0 else lines[limit:]
        lines.reverse()
        lines.push(e)
        lines.insert(0, 'Traceback (most recent call last):')
        return [l+'\n' for l in lines]
    return [ρσ_last_exception.toString()]

def print_exc(limit):
    print(format_exc(limit).join(''))

def format_stack(limit):
    stack = Error().stack
    if not stack:
        return []
    lines = str.splitlines(stack)[2:]
    lines.reverse()
    if limit:
        lines = lines[:limit+1] if limit > 0 else lines[limit:]
    return [l + '\n' for l in lines]

def print_stack(limit):
    print(format_stack(limit).join(''))
