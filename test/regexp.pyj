# vim:fileencoding=utf-8
# License: BSD
# Copyright: 2015, Kovid Goyal <kovid at kovidgoyal.net>

# Test the re module
import re
s = "Isaac Newton, physicist"
c = re.search("(\\w+) (\\w+)", s)
assert.equal(c.group(1), 'Isaac')
assert.equal(c.group(2), 'Newton')
c = re.match("(\\w+) (\\w+)", s)
assert.equal(c.group(1), 'Isaac')
assert.equal(c.group(2), 'Newton')
assert.deepEqual(re.split('\\s', s), ['Isaac', 'Newton,', 'physicist'])
assert.deepEqual(re.findall('s[a-z]', s), ['sa', 'si', 'st'])
assert.deepEqual([m.group() for m in re.finditer('s[a-z]', s)], ['sa', 'si', 'st'])
assert.deepEqual(re.findall(/s[a-z]/, s), ['sa', 'si', 'st'])
assert.equal(re.sub('[A-Z]', '_', s), '_saac _ewton, physicist')
assert.equal(re.search('a[.]b', 'axb'), None)
assert.equal(re.search('a[.]b', 'axb', flags=re.D), None)
assert.equal(re.search('.+', 'a\nb').group(), 'a')
assert.equal(re.search('.+', 'a\nb', flags=re.D).group(), 'a\nb')

# Test verbose mode literals
assert.equal(re.search(///
    a
    .  # anything
    b
    ///, ' axb').group(), 'axb')

